{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\Toothcraft\\\\src\\\\pages\\\\SkillTreePage.js\";\n// src/pages/SkillTreePage.js\n\n// 1. Load React Flow‚Äôs CSS\nimport 'react-flow-renderer/dist/style.css';\nimport 'react-flow-renderer/dist/theme-default.css';\nimport React from 'react';\nimport ReactFlow from 'react-flow-renderer';\n\n// 2. Define the nodes with inline styles so they‚Äôre always visible\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Start Here',\n    credits: 0\n  },\n  position: {\n    x: 250,\n    y: 0\n  },\n  style: {\n    background: '#fff',\n    border: '2px solid #333',\n    padding: 8,\n    width: 120,\n    textAlign: 'center'\n  }\n}, {\n  id: 'surgery',\n  data: {\n    label: 'Oral Surgery',\n    credits: 0\n  },\n  position: {\n    x: 100,\n    y: 150\n  },\n  style: {\n    background: '#fff',\n    border: '2px solid #333',\n    padding: 8,\n    width: 150,\n    textAlign: 'center'\n  }\n}, {\n  id: 'ortho',\n  data: {\n    label: 'Orthodontics',\n    credits: 0\n  },\n  position: {\n    x: 250,\n    y: 150\n  },\n  style: {\n    background: '#fff',\n    border: '2px solid #333',\n    padding: 8,\n    width: 150,\n    textAlign: 'center'\n  }\n}, {\n  id: 'endo',\n  data: {\n    label: 'Endodontics',\n    credits: 0\n  },\n  position: {\n    x: 400,\n    y: 150\n  },\n  style: {\n    background: '#fff',\n    border: '2px solid #333',\n    padding: 8,\n    width: 150,\n    textAlign: 'center'\n  }\n}, {\n  id: 'restor',\n  data: {\n    label: 'Restorative Dentistry',\n    credits: 0\n  },\n  position: {\n    x: 100,\n    y: 300\n  },\n  style: {\n    background: '#fff',\n    border: '2px solid #333',\n    padding: 8,\n    width: 180,\n    textAlign: 'center'\n  }\n}, {\n  id: 'implant',\n  data: {\n    label: 'Implant Dentistry',\n    credits: 0\n  },\n  position: {\n    x: 250,\n    y: 300\n  },\n  style: {\n    background: '#fff',\n    border: '2px solid #333',\n    padding: 8,\n    width: 150,\n    textAlign: 'center'\n  }\n}, {\n  id: 'radio',\n  data: {\n    label: 'Radiology',\n    credits: 0\n  },\n  position: {\n    x: 400,\n    y: 300\n  },\n  style: {\n    background: '#fff',\n    border: '2px solid #333',\n    padding: 8,\n    width: 120,\n    textAlign: 'center'\n  }\n}, {\n  id: 'tmd',\n  data: {\n    label: 'TMD / Orofacial Pain',\n    credits: 0\n  },\n  position: {\n    x: 250,\n    y: 450\n  },\n  style: {\n    background: '#fff',\n    border: '2px solid #333',\n    padding: 8,\n    width: 170,\n    textAlign: 'center'\n  }\n}];\n\n// 3. Auto-generate edges from the root node (id '1') to each category\nconst edges = nodes.filter(n => n.id !== '1').map(n => ({\n  id: `e1-${n.id}`,\n  source: '1',\n  target: n.id,\n  animated: true,\n  style: {\n    stroke: '#333',\n    strokeWidth: 2\n  }\n}));\n\n// 4. Render the tree\nexport default function SkillTreePage() {\n  console.log('üöÄ SkillTreePage loaded');\n  console.log('üîç Nodes:', nodes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n        zIndex: 10,\n        background: '#fff',\n        padding: '4px 8px',\n        border: '1px solid #ccc'\n      },\n      children: \"\\uD83D\\uDEE0\\uFE0F Skill Tree Loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: [...nodes, ...edges],\n      fitView: true,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_c = SkillTreePage;\nvar _c;\n$RefreshReg$(_c, \"SkillTreePage\");","map":{"version":3,"names":["React","ReactFlow","jsxDEV","_jsxDEV","nodes","id","type","data","label","credits","position","x","y","style","background","border","padding","width","textAlign","edges","filter","n","map","source","target","animated","stroke","strokeWidth","SkillTreePage","console","log","height","children","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","elements","fitView","_c","$RefreshReg$"],"sources":["C:/Users/Jacob/Desktop/Toothcraft/src/pages/SkillTreePage.js"],"sourcesContent":["// src/pages/SkillTreePage.js\n\n// 1. Load React Flow‚Äôs CSS\nimport 'react-flow-renderer/dist/style.css';\nimport 'react-flow-renderer/dist/theme-default.css';\n\nimport React from 'react';\nimport ReactFlow from 'react-flow-renderer';\n\n// 2. Define the nodes with inline styles so they‚Äôre always visible\nconst nodes = [\n  {\n    id: '1',\n    type: 'input',\n    data: { label: 'Start Here', credits: 0 },\n    position: { x: 250, y: 0 },\n    style: {\n      background: '#fff',\n      border: '2px solid #333',\n      padding: 8,\n      width: 120,\n      textAlign: 'center'\n    }\n  },\n  {\n    id: 'surgery',\n    data: { label: 'Oral Surgery', credits: 0 },\n    position: { x: 100, y: 150 },\n    style: {\n      background: '#fff',\n      border: '2px solid #333',\n      padding: 8,\n      width: 150,\n      textAlign: 'center'\n    }\n  },\n  {\n    id: 'ortho',\n    data: { label: 'Orthodontics', credits: 0 },\n    position: { x: 250, y: 150 },\n    style: {\n      background: '#fff',\n      border: '2px solid #333',\n      padding: 8,\n      width: 150,\n      textAlign: 'center'\n    }\n  },\n  {\n    id: 'endo',\n    data: { label: 'Endodontics', credits: 0 },\n    position: { x: 400, y: 150 },\n    style: {\n      background: '#fff',\n      border: '2px solid #333',\n      padding: 8,\n      width: 150,\n      textAlign: 'center'\n    }\n  },\n  {\n    id: 'restor',\n    data: { label: 'Restorative Dentistry', credits: 0 },\n    position: { x: 100, y: 300 },\n    style: {\n      background: '#fff',\n      border: '2px solid #333',\n      padding: 8,\n      width: 180,\n      textAlign: 'center'\n    }\n  },\n  {\n    id: 'implant',\n    data: { label: 'Implant Dentistry', credits: 0 },\n    position: { x: 250, y: 300 },\n    style: {\n      background: '#fff',\n      border: '2px solid #333',\n      padding: 8,\n      width: 150,\n      textAlign: 'center'\n    }\n  },\n  {\n    id: 'radio',\n    data: { label: 'Radiology', credits: 0 },\n    position: { x: 400, y: 300 },\n    style: {\n      background: '#fff',\n      border: '2px solid #333',\n      padding: 8,\n      width: 120,\n      textAlign: 'center'\n    }\n  },\n  {\n    id: 'tmd',\n    data: { label: 'TMD / Orofacial Pain', credits: 0 },\n    position: { x: 250, y: 450 },\n    style: {\n      background: '#fff',\n      border: '2px solid #333',\n      padding: 8,\n      width: 170,\n      textAlign: 'center'\n    }\n  }\n];\n\n// 3. Auto-generate edges from the root node (id '1') to each category\nconst edges = nodes\n  .filter(n => n.id !== '1')\n  .map(n => ({\n    id: `e1-${n.id}`,\n    source: '1',\n    target: n.id,\n    animated: true,\n    style: { stroke: '#333', strokeWidth: 2 }\n  }));\n\n// 4. Render the tree\nexport default function SkillTreePage() {\n  console.log('üöÄ SkillTreePage loaded');\n  console.log('üîç Nodes:', nodes);\n\n  return (\n    <div style={{ width: '100vw', height: '100vh', position: 'relative' }}>\n      {/* Debug header */}\n      <h1 style={{\n        position: 'absolute', top: 10, left: 10, zIndex: 10,\n        background: '#fff', padding: '4px 8px', border: '1px solid #ccc'\n      }}>\n        üõ†Ô∏è Skill Tree Loaded\n      </h1>\n\n      <ReactFlow\n        elements={[...nodes, ...edges]}\n        fitView\n        style={{ width: '100%', height: '100%' }}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}